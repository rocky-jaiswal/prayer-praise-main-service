version: 2

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test

jobs:
  test:
    docker:
      - image: circleci/node:12
      - image: circleci/postgres:12
        environment:
          POSTGRES_USER: postgresdev
          POSTGRES_PASSWORD: postgresdev
          POSTGRES_DB: prayer_praise_app_test
    environment:
      NODE_ENV: test
      POSTGRES_USER: postgresdev
      POSTGRES_PASSWORD: postgresdev
      POSTGRES_DB: prayer_praise_app_test
    steps:
      - run:
          name: Install postgres client
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-client
            dockerize -wait tcp://localhost:5432 -timeout 1m
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-deps-{{ checksum "package.json" }}
      - run: yarn lint
      - run: yarn test
  deploy:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run: yarn sha
      - run: 'rm -rf .git'
      - run: 'rm -rf node_modules'
      - run:
          name: set config
          command: |
            UNENCODED_STAGING_CONFIG=$(echo $STAGING_CONFIG | base64 -d)
            echo "$UNENCODED_STAGING_CONFIG" > config/production.yaml
      - add_ssh_keys:
          fingerprints:
            - '56:38:e4:ad:76:a5:4b:fe:b3:c5:5d:ab:a9:57:55:2e'
      - run:
          name: Update known hosts
          command: ssh-keyscan -H praywithus.site >> ~/.ssh/known_hosts
      - run: "ssh rockyj@praywithus.site 'rm -rf /home/rockyj/app/api/build/*'"
      - run: 'tar cvf build.tar config db lib Dockerfile harden.sh index.js knexfile.js package.json server.js index.js yarn.lock sha.txt'
      - run: 'scp -r /home/circleci/project/build.tar rockyj@praywithus.site:/home/rockyj/app/api/build/'
      - run: "ssh rockyj@praywithus.site 'tar xvf /home/rockyj/app/api/build/build.tar --directory /home/rockyj/app/api/build/'"
      - run: "ssh rockyj@praywithus.site '/home/rockyj/app/restart-service.sh api'"
